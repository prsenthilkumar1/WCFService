//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace WCFAssignment1.HttpServiceReference {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="JobModel", Namespace="http://schemas.datacontract.org/2004/07/HttpServiceProject")]
    [System.SerializableAttribute()]
    public partial class JobModel : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private WCFAssignment1.HttpServiceReference.JobDetail[] JobDetailListField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string JobRoleField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public WCFAssignment1.HttpServiceReference.JobDetail[] JobDetailList {
            get {
                return this.JobDetailListField;
            }
            set {
                if ((object.ReferenceEquals(this.JobDetailListField, value) != true)) {
                    this.JobDetailListField = value;
                    this.RaisePropertyChanged("JobDetailList");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string JobRole {
            get {
                return this.JobRoleField;
            }
            set {
                if ((object.ReferenceEquals(this.JobRoleField, value) != true)) {
                    this.JobRoleField = value;
                    this.RaisePropertyChanged("JobRole");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="JobDetail", Namespace="http://schemas.datacontract.org/2004/07/HttpServiceProject")]
    [System.SerializableAttribute()]
    public partial class JobDetail : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string JobDescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string JobIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string JobRoleField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string JobDescription {
            get {
                return this.JobDescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.JobDescriptionField, value) != true)) {
                    this.JobDescriptionField = value;
                    this.RaisePropertyChanged("JobDescription");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string JobID {
            get {
                return this.JobIDField;
            }
            set {
                if ((object.ReferenceEquals(this.JobIDField, value) != true)) {
                    this.JobIDField = value;
                    this.RaisePropertyChanged("JobID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string JobRole {
            get {
                return this.JobRoleField;
            }
            set {
                if ((object.ReferenceEquals(this.JobRoleField, value) != true)) {
                    this.JobRoleField = value;
                    this.RaisePropertyChanged("JobRole");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="HttpServiceReference.IBasicHttp")]
    public interface IBasicHttp {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBasicHttp/SayHello", ReplyAction="http://tempuri.org/IBasicHttp/SayHelloResponse")]
        string SayHello(string name);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBasicHttp/SayHello", ReplyAction="http://tempuri.org/IBasicHttp/SayHelloResponse")]
        System.Threading.Tasks.Task<string> SayHelloAsync(string name);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBasicHttp/OpeningJobs", ReplyAction="http://tempuri.org/IBasicHttp/OpeningJobsResponse")]
        WCFAssignment1.HttpServiceReference.JobModel OpeningJobs();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBasicHttp/OpeningJobs", ReplyAction="http://tempuri.org/IBasicHttp/OpeningJobsResponse")]
        System.Threading.Tasks.Task<WCFAssignment1.HttpServiceReference.JobModel> OpeningJobsAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBasicHttp/OpeningJobsByRole", ReplyAction="http://tempuri.org/IBasicHttp/OpeningJobsByRoleResponse")]
        WCFAssignment1.HttpServiceReference.JobModel OpeningJobsByRole(string Role);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBasicHttp/OpeningJobsByRole", ReplyAction="http://tempuri.org/IBasicHttp/OpeningJobsByRoleResponse")]
        System.Threading.Tasks.Task<WCFAssignment1.HttpServiceReference.JobModel> OpeningJobsByRoleAsync(string Role);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBasicHttp/Addition", ReplyAction="http://tempuri.org/IBasicHttp/AdditionResponse")]
        decimal Addition(decimal firstNumber, decimal secondNumber);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBasicHttp/Addition", ReplyAction="http://tempuri.org/IBasicHttp/AdditionResponse")]
        System.Threading.Tasks.Task<decimal> AdditionAsync(decimal firstNumber, decimal secondNumber);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBasicHttp/Subtraction", ReplyAction="http://tempuri.org/IBasicHttp/SubtractionResponse")]
        decimal Subtraction(decimal firstNumber, decimal secondNumber);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBasicHttp/Subtraction", ReplyAction="http://tempuri.org/IBasicHttp/SubtractionResponse")]
        System.Threading.Tasks.Task<decimal> SubtractionAsync(decimal firstNumber, decimal secondNumber);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IBasicHttpChannel : WCFAssignment1.HttpServiceReference.IBasicHttp, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class BasicHttpClient : System.ServiceModel.ClientBase<WCFAssignment1.HttpServiceReference.IBasicHttp>, WCFAssignment1.HttpServiceReference.IBasicHttp {
        
        public BasicHttpClient() {
        }
        
        public BasicHttpClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public BasicHttpClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public BasicHttpClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public BasicHttpClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public string SayHello(string name) {
            return base.Channel.SayHello(name);
        }
        
        public System.Threading.Tasks.Task<string> SayHelloAsync(string name) {
            return base.Channel.SayHelloAsync(name);
        }
        
        public WCFAssignment1.HttpServiceReference.JobModel OpeningJobs() {
            return base.Channel.OpeningJobs();
        }
        
        public System.Threading.Tasks.Task<WCFAssignment1.HttpServiceReference.JobModel> OpeningJobsAsync() {
            return base.Channel.OpeningJobsAsync();
        }
        
        public WCFAssignment1.HttpServiceReference.JobModel OpeningJobsByRole(string Role) {
            return base.Channel.OpeningJobsByRole(Role);
        }
        
        public System.Threading.Tasks.Task<WCFAssignment1.HttpServiceReference.JobModel> OpeningJobsByRoleAsync(string Role) {
            return base.Channel.OpeningJobsByRoleAsync(Role);
        }
        
        public decimal Addition(decimal firstNumber, decimal secondNumber) {
            return base.Channel.Addition(firstNumber, secondNumber);
        }
        
        public System.Threading.Tasks.Task<decimal> AdditionAsync(decimal firstNumber, decimal secondNumber) {
            return base.Channel.AdditionAsync(firstNumber, secondNumber);
        }
        
        public decimal Subtraction(decimal firstNumber, decimal secondNumber) {
            return base.Channel.Subtraction(firstNumber, secondNumber);
        }
        
        public System.Threading.Tasks.Task<decimal> SubtractionAsync(decimal firstNumber, decimal secondNumber) {
            return base.Channel.SubtractionAsync(firstNumber, secondNumber);
        }
    }
}
